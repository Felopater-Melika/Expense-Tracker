{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","event","onChangeFilter","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","setTitle","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selected","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3af6795e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = e => {\r\n    setEnteredTitle(e.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: e.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = e => {\r\n    setEnteredAmount(e.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: e.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredAmount: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = e => {\r\n    setEnteredDate(e.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: e.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    // return { ...prevState, enteredDate: e.target.value };\r\n    // });\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = props => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const saveExpenseDataHandler = enteredExpenseData => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = props => {\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    setTitle('Updated!');\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date} />\r\n        <div className='expense-item__description'>\r\n          <h2>{title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}> Change Title</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n  let expensesContent = <p>No Expenses Found</p>;\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Apr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'Jul', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0},\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, {useState} from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}